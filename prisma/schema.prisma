generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int           @id @unique @default(autoincrement())
  username        String        @unique
  user_email      String        @unique
  user_password   String // change this to proper authentification
  buyer_rating    Float         @default(0.0)
  seller_rating   Float         @default(0.0)
  seller_reviews  Int           @default(0)
  buyer_reviews   Int           @default(0)
  profile_picture String?
  bio             String?
  status          String?       @default("offline")
  Inactive_since  DateTime?
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt
  deleted_at      DateTime?
  user_address    UserAddress[]
  list_auction    Auction[]     @relation(name: "ListRelation")
  bid_auction     Auction[]     @relation(name: "BidRelation")
  won_auction     Auction[]     @relation(name: "WinnerRelation")
  bid            Bid[]
}

model UserAddress {
  id                Int       @id @unique @default(autoincrement())
  user_id           Int
  address_line1     String
  address_line2     String?
  city              String
  state_or_province String
  postal_code       String
  country           String
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  deleted_at        DateTime?
  User              User      @relation(fields: [user_id], references: [id])
}

model Auction {
  id             Int       @id @unique @default(autoincrement())
  name           String
  image          String?
  description    String?
  starting_price Float
  current_price  Float
  grab_now_price Float?
  auction_type   String
  auction_status String    @default("active")
  start_time     DateTime  @default(now())
  end_time       DateTime?
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  deleted_at     DateTime?
  bids           Bid[]

  lister_id Int
  Lister    User @relation(name: "ListRelation", fields: [lister_id], references: [id])

  // convert this to a list of bidders
  bidder_id Int?
  Bidder    User? @relation(name: "BidRelation", fields: [bidder_id], references: [id])

  winner_id Int?
  Winner    User? @relation(name: "WinnerRelation", fields: [winner_id], references: [id])
}

model Bid {
  id         Int      @id @unique @default(autoincrement())
  auction_id Int
  bidder_id  Int
  bid_amount Float
  created_at DateTime @default(now())
  status     String   @default("pending")

  User    User    @relation(fields: [bidder_id], references: [id])
  Auction Auction @relation(fields: [auction_id], references: [id])
}
